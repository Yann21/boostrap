#!/usr/bin/env bash

touch "$HOME/.rangerdir"

# Install fasd utility
if ! command -v fasd &> /dev/null; then
    echo "Installing fasd"
    FASD_TMP=$(mktemp --directory) &&
    FASD_VERSION="1.0.1" &&
    wget "https://github.com/clvv/fasd/tarball/1.0.1" \
        -O "${FASD_TMP}/fasd.tar.gz" &&
    tar -xvf "$FASD_TMP/fasd.tar.gz" -C "${FASD_TMP}" &&
    install "${FASD_TMP}/clvv-fasd-4822024/fasd" "${HOME}/.local/bin"
fi

# Install bat utility
if ! command -v bat &> /dev/null; then
    echo "Installing bat"
    BAT_TMP=$(mktemp --directory) &&
    BAT_VERSION="0.23.0" &&
    wget "https://github.com/sharkdp/bat/releases/download/v${BAT_VERSION}/bat-v${BAT_VERSION}-x86_64-unknown-linux-gnu.tar.gz" \
        -O "${BAT_TMP}/bat.tar.gz" &&
    tar -xvf "$BAT_TMP/bat.tar.gz" -C "${BAT_TMP}" &&
    install "${BAT_TMP}/bat-v${BAT_VERSION}-x86_64-unknown-linux-gnu/bat" "${HOME}/.local/bin"
fi

# Install rcm requirement
if ! command -v rcup &> /dev/null; then
    echo "Installing rcm"
    # TODO: Put in temp folder
    curl -LO https://thoughtbot.github.io/rcm/dist/rcm-1.3.4.tar.gz &&
    
    tar -xvf rcm-1.3.4.tar.gz &&
    cd rcm-1.3.4 &&
    
    ./configure --prefix=$HOME/.local/ &&
    make &&
    make install
fi

# Install dotfiles
if [ ! -d "$HOME/.dotfiles" ]; then
    echo "Installing dotfiles"
    cp -r dotfiles "$HOME/.dotfiles" &&
    make -C "$HOME/.dotfiles" default
fi

# Add ~/.local/bin to path
if [ -f /etc/profile.d/custom-path.sh ]; then
    echo "PATH=\$PATH:\$HOME/.local/bin" | sudo tee /etc/profile.d/custom-path.sh &> /dev/null
    echo "PATH=\$PATH:\$HOME/system/bin" | sudo tee /etc/profile.d/custom-path.sh &> /dev/null
fi

# Install exa
if ! command -v exa &> /dev/null; then
    echo "Installing exa"
    EXA_TMP=$(mktemp --directory) &&
    EXA_VERSION="0.10.1" &&
    wget "https://github.com/ogham/exa/releases/download/v$EXA_VERSION/exa-linux-x86_64-v$EXA_VERSION.zip" \
        -O "$EXA_TMP/exa.zip" &&
    unzip "$EXA_TMP/exa.zip" -d "$EXA_TMP" &&
    install "$EXA_TMP/bin/exa" "$HOME/.local/bin/"
fi

# Prepare vim
# TODO require yarn
if [ ! -d "$HOME/.vim/plugged" ]; then
    echo "Installing vim"
    mkdir -p "$HOME/.vim/"{backup,autoload,swap} &&
    
    curl -fLo "$HOME/.vim/autoload/plug.vim" --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim &&
    
    echo "Go to https://wakatime.com/api-key to get your api key"
    vim -E +"source $HOME/.vim/vimrc" +"PlugInstall" +qa
    # "$HOME/.vim/plugged/YouCompleteMe/install.py" --all
fi

# Set terminal
if [ ! -d "$HOME/.oh-my-zsh" ]; then
    echo "Installing oh-my-zsh"
    sh -c "$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" &&
    "$HOME/system/bin/omz_plugins.sh" &&
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k" &&
    
    git clone https://github.com/zsh-users/zsh-completions "${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions"
fi

# Install emacs
if [ ! -d "$HOME/.emacs.d" ]; then
    git clone --depth 1 https://github.com/hlissner/doom-emacs "$HOME/.emacs.d" &&
    "$HOME/.emacs.d/bin/doom" install
fi


# Installing monofont for Emacs
if ! fc-list | grep -q "Ubuntu Mono Nerd"; then
    echo "Installing monofont for Emacs"
    wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/UbuntuMono.zip &&
    unzip UbuntuMono.zip -d "$HOME/.local/share/fonts" &&
    fc-cache -f -v
fi

# Installing cpg and mvg
# Requires gcc
if ! command -v cpg &> /dev/null; then
    DIR=$(mktemp -d) &&
    curl https://raw.githubusercontent.com/jarun/advcpmv/master/install.sh --create-dirs -o "$DIR/install.sh" &&
    (cd "$DIR" && sh install.sh 0.8 8.32) &&
    install "$DIR/advcp" "$HOME/.local/bin/cpg" &&
    install "$DIR/advmv" "$HOME/.local/bin/mvg"
fi

# Installing gitwatch
if ! command -v gitwatch &> /dev/null; then
    mkdir -p "$HOME/Downloads/Builds"
    git clone https://github.com/gitwatch/gitwatch.git "$HOME/Downloads/Builds/gitwatch"
    install -b "$HOME/Downloads/Builds/gitwatch/gitwatch.sh" "$HOME/.local/bin/gitwatch"
fi

# Installing v
if ! command -v v &> /dev/null; then
    DIR=$(mktemp -d)
    git clone git@github.com:rupa/v.git "$DIR"
    install "$DIR/v" "$HOME/.local/bin"
    mkdir -p "$HOME/.local/share/man/man1"
    cp "$DIR/v.1" "$HOME/.local/share/man/man1"
    mandb
fi
